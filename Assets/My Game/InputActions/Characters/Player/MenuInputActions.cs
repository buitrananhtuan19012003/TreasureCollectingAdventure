//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/My Game/InputActions/Characters/Player/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace LupinrangerMovementSystem
{
    public partial class @MenuInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @MenuInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
            ""name"": ""Menu"",
            ""id"": ""ccc3c9a2-f0ba-4e7f-a444-b294f5263422"",
            ""actions"": [
                {
                    ""name"": ""Open Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""5c0ad8fd-d9a0-41f2-80a8-ffe770e13fbf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Character Screen"",
                    ""type"": ""Button"",
                    ""id"": ""f2b68ffa-489a-438c-af43-4b0835018e8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Quest Menu"",
                    ""type"": ""Button"",
                    ""id"": ""e96085bf-cc83-4517-be83-0e029a7f1b8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Friends Screen"",
                    ""type"": ""Button"",
                    ""id"": ""e9baedaf-47f4-4103-bb2b-2344052bcbc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Poppy Menu"",
                    ""type"": ""Button"",
                    ""id"": ""c4a444ed-7b9f-46c0-907f-efe5393c21cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Chat Screen"",
                    ""type"": ""Button"",
                    ""id"": ""a59d30b7-3201-4daa-9beb-27db5e9e3096"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""52354648-a479-4cb6-ad73-0036f150f660"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4850fc76-d06b-4196-aee8-008bfa887088"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Character Screen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ece84077-166c-403f-9775-aa2a4db48b5f"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Quest Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce936896-c6fc-4a9b-bcc9-883d0c39e666"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Friends Screen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d8abf79-19bb-4bc0-bc97-fdf3746e5992"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Poppy Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48b24c9f-217e-4e1e-9821-b224929f318d"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Chat Screen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Menu
            m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
            m_Menu_OpenInventory = m_Menu.FindAction("Open Inventory", throwIfNotFound: true);
            m_Menu_OpenCharacterScreen = m_Menu.FindAction("Open Character Screen", throwIfNotFound: true);
            m_Menu_OpenQuestMenu = m_Menu.FindAction("Open Quest Menu", throwIfNotFound: true);
            m_Menu_OpenFriendsScreen = m_Menu.FindAction("Open Friends Screen", throwIfNotFound: true);
            m_Menu_OpenPoppyMenu = m_Menu.FindAction("Open Poppy Menu", throwIfNotFound: true);
            m_Menu_OpenChatScreen = m_Menu.FindAction("Open Chat Screen", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Menu
        private readonly InputActionMap m_Menu;
        private List<IMenuActions> m_MenuActionsCallbackInterfaces = new List<IMenuActions>();
        private readonly InputAction m_Menu_OpenInventory;
        private readonly InputAction m_Menu_OpenCharacterScreen;
        private readonly InputAction m_Menu_OpenQuestMenu;
        private readonly InputAction m_Menu_OpenFriendsScreen;
        private readonly InputAction m_Menu_OpenPoppyMenu;
        private readonly InputAction m_Menu_OpenChatScreen;
        public struct MenuActions
        {
            private @MenuInputActions m_Wrapper;
            public MenuActions(@MenuInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @OpenInventory => m_Wrapper.m_Menu_OpenInventory;
            public InputAction @OpenCharacterScreen => m_Wrapper.m_Menu_OpenCharacterScreen;
            public InputAction @OpenQuestMenu => m_Wrapper.m_Menu_OpenQuestMenu;
            public InputAction @OpenFriendsScreen => m_Wrapper.m_Menu_OpenFriendsScreen;
            public InputAction @OpenPoppyMenu => m_Wrapper.m_Menu_OpenPoppyMenu;
            public InputAction @OpenChatScreen => m_Wrapper.m_Menu_OpenChatScreen;
            public InputActionMap Get() { return m_Wrapper.m_Menu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
            public void AddCallbacks(IMenuActions instance)
            {
                if (instance == null || m_Wrapper.m_MenuActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MenuActionsCallbackInterfaces.Add(instance);
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @OpenCharacterScreen.started += instance.OnOpenCharacterScreen;
                @OpenCharacterScreen.performed += instance.OnOpenCharacterScreen;
                @OpenCharacterScreen.canceled += instance.OnOpenCharacterScreen;
                @OpenQuestMenu.started += instance.OnOpenQuestMenu;
                @OpenQuestMenu.performed += instance.OnOpenQuestMenu;
                @OpenQuestMenu.canceled += instance.OnOpenQuestMenu;
                @OpenFriendsScreen.started += instance.OnOpenFriendsScreen;
                @OpenFriendsScreen.performed += instance.OnOpenFriendsScreen;
                @OpenFriendsScreen.canceled += instance.OnOpenFriendsScreen;
                @OpenPoppyMenu.started += instance.OnOpenPoppyMenu;
                @OpenPoppyMenu.performed += instance.OnOpenPoppyMenu;
                @OpenPoppyMenu.canceled += instance.OnOpenPoppyMenu;
                @OpenChatScreen.started += instance.OnOpenChatScreen;
                @OpenChatScreen.performed += instance.OnOpenChatScreen;
                @OpenChatScreen.canceled += instance.OnOpenChatScreen;
            }

            private void UnregisterCallbacks(IMenuActions instance)
            {
                @OpenInventory.started -= instance.OnOpenInventory;
                @OpenInventory.performed -= instance.OnOpenInventory;
                @OpenInventory.canceled -= instance.OnOpenInventory;
                @OpenCharacterScreen.started -= instance.OnOpenCharacterScreen;
                @OpenCharacterScreen.performed -= instance.OnOpenCharacterScreen;
                @OpenCharacterScreen.canceled -= instance.OnOpenCharacterScreen;
                @OpenQuestMenu.started -= instance.OnOpenQuestMenu;
                @OpenQuestMenu.performed -= instance.OnOpenQuestMenu;
                @OpenQuestMenu.canceled -= instance.OnOpenQuestMenu;
                @OpenFriendsScreen.started -= instance.OnOpenFriendsScreen;
                @OpenFriendsScreen.performed -= instance.OnOpenFriendsScreen;
                @OpenFriendsScreen.canceled -= instance.OnOpenFriendsScreen;
                @OpenPoppyMenu.started -= instance.OnOpenPoppyMenu;
                @OpenPoppyMenu.performed -= instance.OnOpenPoppyMenu;
                @OpenPoppyMenu.canceled -= instance.OnOpenPoppyMenu;
                @OpenChatScreen.started -= instance.OnOpenChatScreen;
                @OpenChatScreen.performed -= instance.OnOpenChatScreen;
                @OpenChatScreen.canceled -= instance.OnOpenChatScreen;
            }

            public void RemoveCallbacks(IMenuActions instance)
            {
                if (m_Wrapper.m_MenuActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMenuActions instance)
            {
                foreach (var item in m_Wrapper.m_MenuActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MenuActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MenuActions @Menu => new MenuActions(this);
        
        public interface IMenuActions
        {
            void OnOpenInventory(InputAction.CallbackContext context);
            void OnOpenCharacterScreen(InputAction.CallbackContext context);
            void OnOpenQuestMenu(InputAction.CallbackContext context);
            void OnOpenFriendsScreen(InputAction.CallbackContext context);
            void OnOpenPoppyMenu(InputAction.CallbackContext context);
            void OnOpenChatScreen(InputAction.CallbackContext context);
        }
    }
}
